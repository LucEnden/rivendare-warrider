name: Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: get_tag
      run: |
        $latestTag = git describe --tags --abbrev=0
        echo "tag=$latestTag" >> $env:GITHUB_OUTPUT
        echo "Latest tag: $latestTag"

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore RivendareWarriderTracker.sln

    - name: Build in Release mode
      run: msbuild RivendareWarriderTracker.sln /p:Configuration=Release /p:Platform="Any CPU"

    - name: Verify build output
      run: |
        if (Test-Path "bin\Release\rivendare-warrider-tracker.dll") {
          Write-Host "✅ DLL found: bin\Release\rivendare-warrider-tracker.dll"
          Get-Item "bin\Release\rivendare-warrider-tracker.dll" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Host "❌ DLL not found in bin\Release\"
          Write-Host "Contents of bin\Release:"
          if (Test-Path "bin\Release") {
            Get-ChildItem "bin\Release" | Select-Object Name, Length
          } else {
            Write-Host "bin\Release directory does not exist"
          }
          exit 1
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rivendare-warrider-tracker
        path: bin\Release\rivendare-warrider-tracker.dll

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        name: Release ${{ steps.get_tag.outputs.tag }}
        files: bin\Release\rivendare-warrider-tracker.dll
        draft: false
        prerelease: false
        generate_release_notes: true
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}